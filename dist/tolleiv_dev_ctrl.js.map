{"version":3,"sources":["../src/tolleiv_dev_ctrl.js"],"names":["MetricsPanelCtrl","_","moment","angular","TimeSeries","TolleivDevCtrl","$scope","$injector","default_cfg","containerStyle","prefixColumn","prefixFontSize","prefixBreak","valueColumn","valueFontSize","postfixColumn","postfixFontSize","postfixBreak","defaults","panel","tableColumnOptions","events","on","onInitEditMode","bind","onDataReceived","fontSizes","addEditorTab","dataList","data","dataType","tableData","map","tableHandler","setTableValues","render","datapoints_1","columnNames_1","columns","forEach","column","columnIndex","text","find","tableColumn","setTableColumnToSensibleDefault","rows","row","datapoint","value","key","push","length","col","type","undefined","prefix","postfix","scope","elem","attrs","ctrl","templateSrv","getSpan","className","fontSize","isString","replace","scopedVars","getBigValueHtml","body","console","log","html","renderingCompleted","templateUrl"],"mappings":"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","file":"tolleiv_dev_ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\n\nimport _ from 'lodash';\nimport moment from 'moment';\nimport angular from 'angular';\n\nimport TimeSeries from 'app/core/time_series2';\n\nexport class TolleivDevCtrl extends MetricsPanelCtrl {\n\n  constructor($scope, $injector) {\n\n    var default_cfg = {\n      containerStyle: '',\n      prefixColumn: '',\n      prefixFontSize: '50%',\n      prefixBreak: false,\n      valueColumn: '',\n      valueFontSize: '100%',\n      postfixColumn: '',\n      postfixFontSize: '50%',\n      postfixBreak: false,\n    }\n\n    super($scope, $injector);\n    _.defaults(this.panel, default_cfg);\n\n    this.tableColumnOptions = {}\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n  }\n\n  onInitEditMode() {\n     this.fontSizes = ['20%', '30%','50%','70%','80%','100%', '110%', '120%', '150%', '170%', '200%'];\n     this.addEditorTab('Options', 'public/plugins/tolleiv-dev-panel/editor.html', 2);\n  }\n\n  onDataReceived(dataList) {\n\t  var data = {};\n    \n    this.dataType = 'table';\n    var tableData = dataList.map(this.tableHandler.bind(this));\n    this.setTableValues(tableData, data);\n    this.data = data;\n    this.render();\n  }\n\n  tableHandler(tableData) {\n    var datapoints_1 = [];\n    var columnNames_1 = { '': 'None' };\n    tableData.columns.forEach(function (column, columnIndex) {\n        columnNames_1[columnIndex] = column.text;\n    });\n    this.tableColumnOptions = columnNames_1;\n    if (!_.find(tableData.columns, ['text', this.panel.tableColumn])) {\n        this.setTableColumnToSensibleDefault(tableData);\n    }\n    tableData.rows.forEach(function (row) {\n        var datapoint = {};\n        row.forEach(function (value, columnIndex) {\n            var key = columnNames_1[columnIndex];\n            datapoint[key] = value;\n        });\n        datapoints_1.push(datapoint);\n    });\n    return datapoints_1;\n  }\n\n  setTableColumnToSensibleDefault(tableData) {\n      if (this.tableColumnOptions.length === 1) {\n          this.panel.tableColumn = this.tableColumnOptions[0];\n      }\n      else {\n          this.panel.tableColumn = _.find(tableData.columns, function (col) { return col.type !== 'time'; }).text;\n      }\n  }\n\n  setTableValues(tableData, data) {\n      if (!tableData || tableData.length === 0) {\n          return;\n      }\n      if (tableData[0].length === 0 || tableData[0][0][this.panel.tableColumn] === undefined) {\n          return;\n      }\n      var datapoint = tableData[0][0];\n      data.prefix = datapoint[this.panel.prefixColumn];\n      data.value = datapoint[this.panel.valueColumn];\n      data.postfix = datapoint[this.panel.postfixColumn];\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    var data = {}\n    var panel = ctrl.panel;\n    var templateSrv = this.templateSrv;\n    elem = elem.find('.tolleiv-dev-panel');\n\n    function getSpan(className, fontSize, value)  {\n      if (!_.isString(value)) {\n          return\n      }\n      value = templateSrv.replace(value, data.scopedVars);\n      return '<span class=\"' + className + '\" style=\"font-size:' + fontSize + '\">' +\n        value + '</span> ';\n    }\n\n    function getBigValueHtml() {\n      var body = '<div class=\"tolleiv-dev-panel-value-container singlestat-panel-value-container\">';\n      console.log(panel.prefixBreak)\n      if (data.prefix) { body += getSpan('tolleiv-dev-panel-prefix singlestat-panel-prefix', panel.prefixFontSize, data.prefix); }\n      if (panel.prefixBreak) { body += '<br/>' }\n      if (data.value) {  body += getSpan('tolleiv-dev-panel-value', panel.valueFontSize,   data.value); }\n      if (panel.postfixBreak) { body += '<br/>' }\n      if (data.postfix) { body += getSpan('tolleiv-dev-panel-postfix  singlestat-panel-postfix', panel.postfixFontSize, data.postfix); }\n\n      body += '</div>';\n\n      return body;\n    }\n\n    function render() {\n      if (!ctrl.data) { return; }\n      data = ctrl.data;\n      elem.html(getBigValueHtml());\n    }\n\n    this.events.on('render', function() {\n      render();\n      ctrl.renderingCompleted();\n    });\n  }\n\n}\n\nTolleivDevCtrl.templateUrl = 'module.html';\n"]}
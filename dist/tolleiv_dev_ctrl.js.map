{"version":3,"sources":["../src/tolleiv_dev_ctrl.js"],"names":["MetricsPanelCtrl","_","moment","angular","TimeSeries","TolleivDevCtrl","$scope","$injector","default_cfg","tableColumnOne","tableColumnTwo","tableColumnThree","prefix","prefixFontSize","postfix","postfixFontSize","valueMaps","value","op","text","colorValue","defaults","panel","tableColumnOptions","events","on","onInitEditMode","bind","onDataReceived","fontSizes","addEditorTab","dataList","data","dataType","tableData","map","tableHandler","setTableValues","render","datapoints_1","columnNames_1","columns","forEach","column","columnIndex","find","tableColumn","setTableColumnToSensibleDefault","rows","row","datapoint","key","push","length","col","type","undefined","valueOne","isString","valueOneFormatted","escape","valueOneRounded","valueTwo","valueTwoFormatted","valueTwoRounded","valueThree","valueThreeFormatted","valueThreeRounded","setValueMapping","i","valueFormatted","parseFloat","valueRounded","scope","elem","attrs","ctrl","templateSrv","applyColoringThresholds","valueString","color","getColorForValue","getSpan","className","fontSize","replace","scopedVars","getBigValueHtml","body","valueOneFontSize","valueTwoFontSize","valueThreeFontSize","html","renderingCompleted","templateUrl"],"mappings":"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","file":"tolleiv_dev_ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\n\nimport _ from 'lodash';\nimport moment from 'moment';\nimport angular from 'angular';\n\nimport TimeSeries from 'app/core/time_series2';\n\nexport class TolleivDevCtrl extends MetricsPanelCtrl {\n\n  constructor($scope, $injector) {\n\n    var default_cfg = {\n      tableColumnOne: '',\n      tableColumnTwo: '',\n      tableColumnThree: '',\n\n      prefix: '',\n      prefixFontSize: '50%',\n      postfix: '',\n      postfixFontSize: '50%',\n      valueMaps: [\n        { value: 'null', op: '=', text: 'N/A' }\n      ],\n      colorValue: false\n    }\n\n    super($scope, $injector);\n    _.defaults(this.panel, default_cfg);\n\n    this.tableColumnOptions = {}\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n  }\n\n  onInitEditMode() {\n     this.fontSizes = ['20%', '30%','50%','70%','80%','100%', '110%', '120%', '150%', '170%', '200%'];\n     this.addEditorTab('Options', 'public/plugins/tolleiv-dev-panel/editor.html', 2);\n  }\n\n  onDataReceived(dataList) {\n\t  var data = {};\n    \n    this.dataType = 'table';\n    var tableData = dataList.map(this.tableHandler.bind(this));\n    this.setTableValues(tableData, data);\n    this.data = data;\n    this.render();\n  }\n\n  tableHandler(tableData) {\n    var datapoints_1 = [];\n    var columnNames_1 = {};\n    tableData.columns.forEach(function (column, columnIndex) {\n        columnNames_1[columnIndex] = column.text;\n    });\n    this.tableColumnOptions = columnNames_1;\n    if (!_.find(tableData.columns, ['text', this.panel.tableColumn])) {\n        this.setTableColumnToSensibleDefault(tableData);\n    }\n    tableData.rows.forEach(function (row) {\n        var datapoint = {};\n        row.forEach(function (value, columnIndex) {\n            var key = columnNames_1[columnIndex];\n            datapoint[key] = value;\n        });\n        datapoints_1.push(datapoint);\n    });\n    return datapoints_1;\n  }\n\n  setTableColumnToSensibleDefault(tableData) {\n      if (this.tableColumnOptions.length === 1) {\n          this.panel.tableColumn = this.tableColumnOptions[0];\n      }\n      else {\n          this.panel.tableColumn = _.find(tableData.columns, function (col) { return col.type !== 'time'; }).text;\n      }\n  }\n\n  setTableValues(tableData, data) {\n      if (!tableData || tableData.length === 0) {\n          return;\n      }\n      if (tableData[0].length === 0 || tableData[0][0][this.panel.tableColumn] === undefined) {\n          return;\n      }\n      var datapoint = tableData[0][0];\n      data.valueOne = datapoint[this.panel.tableColumnOne];\n      if (_.isString(data.valueOne)) {\n          data.valueOneFormatted = _.escape(data.valueOne);\n          data.valueOne = 0;\n          data.valueOneRounded = 0;\n      }\n      data.valueTwo = datapoint[this.panel.tableColumnTwo];\n      if (_.isString(data.valueTwo)) {\n          data.valueTwoFormatted = _.escape(data.valueTwo);\n          data.valueTwo = 0;\n          data.valueTwoRounded = 0;\n      }\n      data.valueThree = datapoint[this.panel.tableColumnThree];\n      if (_.isString(data.valueThree)) {\n          data.valueThreeFormatted = _.escape(data.valueThree);\n          data.valueThree = 0;\n          data.valueThreeRounded = 0;\n      }\n\n\n      this.setValueMapping(data);\n  }\n  setValueMapping(data) {\n    for (var i = 0; i < this.panel.valueMaps.length; i++) {\n        var map = this.panel.valueMaps[i];\n        // special null case\n        if (map.value === 'null') {\n            if (data.value === null || data.value === void 0) {\n                data.valueFormatted = map.text;\n                return;\n            }\n            continue;\n        }\n        // value/number to text mapping\n        var value = parseFloat(map.value);\n        if (value === data.valueRounded) {\n            data.valueFormatted = map.text;\n            return;\n        }\n    }\n    \n    if (data.value === null || data.value === void 0) {\n        data.valueFormatted = \"no value\";\n    }\n  }\n  link(scope, elem, attrs, ctrl) {\n    var data = {}\n    var panel = ctrl.panel;\n    var templateSrv = this.templateSrv;\n    elem = elem.find('.tolleiv-dev-panel');\n\n    function applyColoringThresholds(value, valueString) {\n      if (!panel.colorValue) {\n        return valueString;\n      }\n\n      var color = getColorForValue(data, value);\n      if (color) {\n        return '<span style=\"color:' + color + '\">'+ valueString + '</span>';\n      }\n\n      return valueString;\n    }\n\n    function getSpan(className, fontSize, value)  {\n      value = templateSrv.replace(value, data.scopedVars);\n      return '<span class=\"' + className + '\" style=\"font-size:' + fontSize + '\">' +\n        value + '</span><br/>';\n    }\n\n    function getBigValueHtml() {\n      var body = '<div class=\"tolleiv-dev-panel-value-container singlestat-panel-value-container\">';\n\n      if (panel.prefix) { body += getSpan('tolleiv-dev-panel-prefix singlestat-panel-prefix', panel.prefixFontSize, panel.prefix); }\n\n      var value = applyColoringThresholds(data.valueOne, data.valueOneFormatted);\n      body += getSpan('tolleiv-dev-panel-value', panel.valueOneFontSize, value);\n      var value = applyColoringThresholds(data.valueTwo, data.valueTwoFormatted);\n      body += getSpan('tolleiv-dev-panel-value', panel.valueTwoFontSize, value);\n      var value = applyColoringThresholds(data.valueThree, data.valueThreeFormatted);\n      body += getSpan('tolleiv-dev-panel-value', panel.valueThreeFontSize, value);\n\n      if (panel.postfix) { body += getSpan('tolleiv-dev-panel-postfix  singlestat-panel-postfix', panel.postfixFontSize, panel.postfix); }\n\n      body += '</div>';\n\n      return body;\n    }\n\n    function render() {\n      if (!ctrl.data) { return; }\n      data = ctrl.data;\n      elem.html(getBigValueHtml());\n    }\n\n    this.events.on('render', function() {\n      render();\n      ctrl.renderingCompleted();\n    });\n  }\n\n}\n\nTolleivDevCtrl.templateUrl = 'module.html';\n"]}